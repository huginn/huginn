name: CI

on:
  push:
  pull_request:

jobs:
  run-tests:
    name: ${{ matrix.os }} ruby-${{ matrix.ruby }} ${{ matrix.database_adapter }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-20.04
        database_adapter:
          - postgresql
        ruby:
          # - "2.7"
          - "2.6"
    env:
      DATABASE_ADAPTER: ${{ matrix.database_adapter }}
      DATABASE_HOST: '127.0.0.1'
      DATABASE_USERNAME: root
      DATABASE_PASSWORD: password
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3
    steps:
      - uses: actions/checkout@v2

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          rubygems: latest
          bundler: latest
          bundler-cache: true

      - name: Set up database
        run: bundle exec rake db:create db:migrate

      - name: Run tests
        run: bundle exec rake

  build-docker-images:
    name: docker-build-${{ matrix.docker_image }}
    needs: run-tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        docker_image:
          - huginn/huginn
          - huginn/huginn-single-process
    env:
      DOCKER_IMAGE: ${{ matrix.docker_image }}
      DOCKERFILE: docker/${{ contains(matrix.docker_image, 'single-process') && 'single-process' || 'multi-process' }}/Dockerfile
      DOCKER_USER: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKER_PASS: ${{ secrets.DOCKERHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v2

      - name: Build a docker image
        run: |
          if [ "$GITHUB_EVENT_NAME" = push -a "$GITHUB_REF_NAME" = master ]; then
            ./build_docker_image.sh --push
          else
            ./build_docker_image.sh
          fi
